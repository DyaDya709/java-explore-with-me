-- drop table if exists requests cascade;
--
-- drop table if exists compilation_events cascade;
--
-- drop table if exists events cascade;
--
-- drop table if exists users cascade;
--
-- drop table if exists categories cascade;
--
-- drop table if exists compilations cascade;


create table if not exists users
(
    id    bigint generated by default as identity,
    email varchar(255) not null,
    name  varchar(255) not null,
    primary key (id),
    constraint uq_user_email
        unique (email)
);

create table if not exists categories
(
    id   bigint generated by default as identity,
    name varchar(255) not null,
    primary key (id),
    constraint uq_categories_name
        unique (name)
);

create index if not exists categories_name_field
    on categories (name);

create table if not exists events
(
    id                 bigint generated by default as identity,
    annotation         varchar(2000) not null,
    category_id        bigint        not null,
    created_on         timestamp,
    description        varchar(7000) not null,
    event_date         timestamp     not null,
    initiator_id       bigint        not null,
    lat                double precision,
    lon                double precision,
    paid               boolean       not null,
    participant_limit  integer,
    published_on       timestamp,
    request_moderation boolean       not null,
    state              varchar       not null,
    title              varchar(255)  not null,
    primary key (id),
    constraint uq_events
        unique (title),
    constraint fk_category_id
        foreign key (category_id) references categories
            on delete cascade,
    constraint fk_initiator_id
        foreign key (initiator_id) references users
            on delete cascade
);

create index if not exists sevents_state_field
    on events (state);

create index if not exists sevents_event_date_field
    on events (event_date);

create index if not exists sevents_paid_field
    on events (paid);

create table if not exists requests
(
    id           bigint generated by default as identity,
    created      timestamp not null,
    event_id     bigint    not null,
    requester_id bigint    not null,
    status       varchar,
    primary key (id),
    constraint fk_event_id
        foreign key (event_id) references events
            on delete cascade,
    constraint fk_requester_id
        foreign key (requester_id) references users
            on delete cascade
);

create table if not exists compilations
(
    id     bigint generated by default as identity,
    pinned boolean not null,
    title  varchar(500),
    primary key (id)
);

create index if not exists compilations_name_field
    on compilations (pinned);

create table if not exists compilation_events
(
    compilation_id bigint not null,
    event_id       bigint not null,
    constraint pk_comp_event
        primary key (compilation_id, event_id),
    constraint fk_compilation_id
        foreign key (compilation_id) references compilations
            on delete cascade,
    constraint fk_event_id
        foreign key (event_id) references events
            on delete cascade
);
